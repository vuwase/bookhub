name: Deploy to Staging

on:
  push:
    branches: [develop]

env:
  APP_NAME: "bookhub-frontend"
  SLOT_NAME: "staging"
  RESOURCE_GROUP: "bookhub-rg"
  ACR_NAME: "bookhubacr"
  NODE_VERSION: "18"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'Book_Hub/frontend/package-lock.json'

      - name: Install dependencies
        working-directory: Book_Hub/frontend
        run: |
          ls -la  # Verify files
          npm ci --strict-peer-deps
          npm cache clean --force

      - name: Build app
        working-directory: Book_Hub/frontend
        run: npm run build

      - name: Login to ACR
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }} .
          # No explicit login needed with Managed Identity
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}

      - name: Deploy to staging slot
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: ${{ env.SLOT_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}
          images: '${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}'